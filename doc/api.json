{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Health Care",
    "description": "API for retrieving data",
  },
  "host": "benjamin-zhou.com:3000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/diseases": {
      "get": {
        "description": "Returns all diseases",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "position where the result start",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "reponse the list of diseases",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiseaseShort"
              }
            }
          }
        }
      },
      "post": {
        "description": "Return a list of diseases",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "A list of id",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "reutrn a list of diseases",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Disease"
              }
            }
          }
        }
      }
    },
    "/api/diseases/{id}": {
      "get": {
        "description": "Return the disease specidfied by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of disease",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "disease information",
            "schema": {
              "$ref": "#/definitions/Disease"
            }
          }
        }
      }
    },
    "/api/diseases/position": {
      "post": {
        "description": "Return a list of diseases that matched the given position",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "position",
            "in": "body",
            "description": "Position",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Position"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "reutrn a list of diseases",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiseaseShort"
              }
            }
          }
        }
      }
    },
    "/api/position/level1/{level1_position}/{gender}": {
      "get": {
        "description": "Return the level2 position that belongs to given level1 position",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "level1_position",
            "in": "path",
            "description": "Keyword of level1 position",
            "required": true,
            "type": "string"
          },
          {
            "name": "gender",
            "in": "path",
            "description": "Gender",
            "required": true,
            "type": "string",
            "enum": ["male", "female"]
          }
        ],
        "responses": {
          "200": {
            "description": "a list of level2 position",
            "schema": {
              "$ref": "#/definitions/Level2PosShort"
            }
          }
        }
      }
    },
    "/api/service/symptom-match": {
      "post": {
        "description": "Return a list of diseases that matched the given symptoms",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "symptoms",
            "in": "body",
            "description": "A list of symptoms",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "reutrn a list of diseases",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiseaseShort"
              }
            }
          }
        }
      }
    },
    "/api/session": {
      "post": {
        "description": "Register a session",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authentication",
            "in": "body",
            "description": "Email and password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAuth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Error if exists",
            "schema": {
              "$ref": "#/definitions/Err",
            }
          }
        }
      },
      "delete": {
        "description": "Delete a session",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Error if exists",
            "schema": {
              "$ref": "#/definitions/Err",
            }
          }
        }
      },
    },
    "/api/user": {
      "get": {
        "description": "Return cuurent session information",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "reponse the current user information",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserClient"
              }
            }
          }
        }
      },
      "post": {
        "description": "Create an user account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "Account information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserReg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Error if exists",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Err"
              }
            }
          }
        }
      },
      "put": {
        "description": "Update a existing user's information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "Account information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserReg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Error if exists",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Err"
              }
            }
          }
        }
      }
    },
    "/api/user/password": {
      "post": {
        "description": "Send change password confirmation link to the  user's email account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "New password and confirmation email address, the email address must be the same as the one in your account information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserChangePassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Error if exists",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Err"
              }
            }
          }
        }
      }
    },
    "/api/user/{email}": {
      "get": {
        "description": "Check whether an email already exists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Whether an eamil already exists",
            "schema": {
              "$ref": "#/definitions/UserExist"
            }
          }
        }
      }
    },
    "/api/record": {
      "get": {
        "description": "Return all the records relevant to current user",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "reponse the current user information",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Record"
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new record",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "record",
            "in": "body",
            "description": "Record information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecordInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Error if exists",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Err"
              }
            }
          }
        }
      },
      "put": {
        "description": "Update an existing user's record",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "Record information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecordInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Error if exists",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Err"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Symptom": {
      "type": "object",
      "required": [
        "id",
        "name",
        "type"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "DiseaseShort": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Disease": {
      "type": "object",
      "required": [
        "id",
        "name",
        "Symptoms"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "Symptoms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Symptom"
          }
        }
      }
    },
    "Position": {
      "type": "object",
      "required": [
        "level1", 
        "level2"
      ],
      "properties": {
        "level1": {
          "type": "string"
        },
        "level2": {
          "type": "string"
        }
      }
    },
    "Level2PosShort": {
      "type": "object",
      "required": [
        "id", 
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "UserFull": {
      "type": "object",
      "required": [
        "id",
        "password",
        "email"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "gender": {
          "type": "string",
          "enum": ["male", "female"]
        },
        "age": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UserAuth": {
      "type": "object",
      "required": [
        "password",
        "email"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "permanent": {
          "type": "boolean"
        }
      }
    },
    "UserChangePassword": {
      "type": "object",
      "required": [
        "password",
        "email"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "UserReg": {
      "type": "object",
      "required": [
        "password",
        "email"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "gender": {
          "type": "string",
          "enum": ["male", "female"]
        },
        "age": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UserClient": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "gender": {
          "type": "string",
          "enum": ["male", "female"]
        },
        "age": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UserExist": {
      "type": "object",
      "required" :[
        "exist"
      ],
      "properties":{
        "exist": {
          "type": "boolean"
        }
      }
    },
    "Record": {
      "type": "object",
      "properties":{
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "integer",
          "format": "int32"
        },
        "satisfyting": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string",
        },
        "user": {
          "type": "object",
          "items": {
            "$ref": "#/definitions/UserClient"
          }
        },
        "diseases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disease"
          }
        }
      }
    },
    "RecordInput": {
      "type": "object",
      "properties":{
        "disease_id":{
          "type": "array",
          "items":{
            "type": "integer"
          }
        },
        "satisfyting": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string",
        }
      }
    },
    "Err": {
      "type": "object",
      "required": [
        "Err"
      ],
      "properties": {
        "Err": {
          "type": ["string", "null"]
        }
      }
    }
  }
}
